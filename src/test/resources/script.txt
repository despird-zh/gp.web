CREATE DEFINER=`skip-grants user`@`skip-grants host` FUNCTION `func_split_str`(x VARCHAR(255),
  delim VARCHAR(12),
  pos INT) RETURNS varchar(255) CHARSET utf8
BEGIN
RETURN REPLACE(
	SUBSTRING(
		SUBSTRING_INDEX(x, delim, pos + 1),
       LENGTH(SUBSTRING_INDEX(x, delim, pos)) + 1),
       delim, '');
END

CREATE DEFINER=`skip-grants user`@`skip-grants host` PROCEDURE `proc_fid2path`(in `p_folder_id` integer, out p_folder_path varchar(2048))
BEGIN
	declare v_fpath varchar(256);
	declare v_ppath varchar(256);
	declare v_pid varchar(256);
	set max_sp_recursion_depth=256;
	select folder_name,folder_pid into v_fpath, v_pid from gp_cab_folders where folder_id = p_folder_id;
	
	if v_pid = -98 then
		select concat('/', v_fpath) into p_folder_path;
	else
		call proc_fid2path(v_pid, v_ppath);
		select concat(v_ppath, '/', v_fpath) into p_folder_path;
	end if;
END

CREATE DEFINER=`skip-grants user`@`skip-grants host` PROCEDURE `proc_path2fid`(IN `p_cabinet_id` integer,IN `p_folder_path` varchar(2048),OUT `p_folder_id` integer)
BEGIN
	DECLARE v_folder_name varchar(256);
	declare v_idx integer default 1;
	declare v_folder_pid integer default -98;

	repeat
		select func_split_str(p_folder_path,'/',v_idx) into v_folder_name;
		if v_folder_name = '' THEN
			set p_folder_id = v_folder_pid;
		ELSE
			select folder_id into v_folder_pid from gp_cab_folders 
				where folder_name = v_folder_name 
					and cabinet_id = p_cabinet_id 
					and folder_pid = v_folder_pid;
		end if;
		set v_idx = v_idx + 1;
		until v_folder_name = ''
	end repeat; 
	
END

======================
drop procedure if exists proc_org_route ;
DELIMITER ;;
CREATE  PROCEDURE `proc_org_route`(in `p_org_id` integer, out `route_ids` varchar(2048))
BEGIN
	
	declare v_pid integer default 0;
	declare v_p_cnt integer default 1;
	declare v_org_id integer ;
	
	set v_org_id = p_org_id;
	set route_ids = '';
	while v_p_cnt > 0 and v_pid != -99 do
		select org_pid, count(org_id) into v_pid, v_p_cnt from gp_org_hier where org_id = v_org_id;
		
		if v_p_cnt > 0 and route_ids = '' then
			set route_ids = v_org_id;
		else
			set route_ids = concat(v_org_id ,'-', route_ids);
		end if;
		set v_org_id = v_pid;
	end while;
	
END;;
DELIMITER ;
call proc_org_route(11, @str);
select @str as output ;
==============
drop procedure if exists proc_wgroup_route ;
DELIMITER ;;
CREATE  PROCEDURE `proc_wgroup_route`(in `p_wgroup_id` integer, out `route_ids` varchar(2048))
BEGIN
	
	declare v_pid integer default 0;
	declare v_p_cnt integer default 1;
	declare v_wgroup_id integer ;
	
	set v_wgroup_id = p_wgroup_id;
	set route_ids = '';
	while v_p_cnt > 0 and v_pid != -99 do
		select workgroup_pid, count(workgroup_id) into v_pid, v_p_cnt from gp_workgroups where workgroup_id = v_wgroup_id;
		
		if v_p_cnt > 0 and route_ids = '' then
			set route_ids = v_wgroup_id;
		else
			set route_ids = concat(v_wgroup_id ,'-', route_ids);
		end if;
		set v_wgroup_id = v_pid;
	end while;
	
END;;
DELIMITER ;

------------
drop procedure if exists proc_fid2path;

DELIMITER ;;
CREATE  PROCEDURE `proc_fid2path`(in `p_folder_id` integer, out p_folder_path varchar(2048))
BEGIN
	declare v_fpath varchar(256);
	declare v_pid integer default 0;
	declare v_f_cnt integer default 1;
	declare v_fid integer default 0;
	
	/* initial the output value */
	set p_folder_path = '';
	set v_fid = p_folder_id;
	while v_pid != -99 and v_f_cnt > 0 do
		select folder_name,folder_pid, count(folder_id) into v_fpath, v_pid, v_f_cnt from gp_cab_folders where folder_id = v_fid;
	
		if v_f_cnt > 0 and p_folder_path = '' then
			set p_folder_path = concat('/', v_fpath);
		else
			set p_folder_path = concat(p_folder_path, '/', v_fpath);
		end if;
		set v_fid = v_pid;
	end while;
END;;
DELIMITER ;